set-option -g prefix `
set-option -g default-shell /usr/bin/fish

unbind-key C-b
bind-key C-a last-window
bind-key ` resize-pane -Z
bind-key a send-prefix
bind-key q command-prompt "select-pane -t %% \; resize-pane -Z"
bind-key Q last-pane \; resize-pane -Z
bind-key e display-panes
bind-key ! select-pane -t 1# \; resize-pane -Z
bind-key @ select-pane -t 2# \; resize-pane -Z
bind-key '#' select-pane -t 3# \; resize-pane -Z
bind-key N command-prompt "new-session -s %%"
bind-key K kill-window

# 0 is too far from ` ;)
set -g base-index 1
setw -g pane-base-index 1

setw -g mode-keys vi
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

bind-key -n C-S-Up resize-pane -U 15
bind-key -n C-S-Down resize-pane -D 15

#bind F new-window -n 'tmp*' -t 1 -a \; last-window \; swap-window -t 'tmp*'
bind F swap-window -t 1
bind L switch-client -l

bind g select-pane -t 3

# Setup 'v' to begin selection as in Vim
#bind-key -t vi-copy v begin-selection
#bind-key -t vi-copy 'y' copy-selection

set -g set-titles on
set-option -g set-titles-string '#S:#I.#P #W'
setw -g automatic-rename on
#setw -g automatic-rename-format ' #(pwd="#{pane_current_path}"; echo ${pwd####*/})'
setw -g automatic-rename-format ' #(pwd="#{pane_current_path}"; echo ${pwd####*/}) - #{pane_current_command} '
#setw -g automatic-rename-format ' #{pane_current_command} '
setw -g window-status-separator '   '
set-option -g renumber-windows on

#bind t splitw -v -p 30 -c '#{pane_current_path}' \; splitw -h -c '#{pane_current_path}'
bind t splitw -h -p 40 -c '#{pane_current_path}' \; select-pane -L \; splitw -v -p 30 -c '#{pane_current_path}' \; select-pane -U
#bind t splitw -v -p 30 -c '#{pane_current_path}' \; splitw -h -p 40 -c '#{pane_current_path}' \; select-pane -U
#bind t splitw -h -p 40 -c '#{pane_current_path}' \; splitw -v -p 70 -c '#{pane_current_path}' \; select-pane -L
#bind t splitw -h -p 40 -c '#{pane_current_path}' \; select-pane -L splitw -v -p 70 -c '#{pane_current_path}' \; select-pane -L

bind Tab last-window

bind-key -n C-S-Left swap-window -t -1
bind-key -n C-S-Right swap-window -t +1

bind r source-file ~/.tmux.conf

set -g default-terminal "screen-256color"

bind c new-window -c "#{pane_current_path}"
bind C new-window -a -c '#{pane_current_path}'
bind '"' split-window -v -c '#{pane_current_path}'
bind % split-window -h -c '#{pane_current_path}'

bind , command-prompt -I "rename-window "

set-option -g history-limit 5000
set-option -g status-interval 1

#set-option -g -q mouse on
set -g status-left ' #S >   '
set -g status-left-length 50
set -g status-right '%I:%M %p '
set -g status-right-length 50

##### DESIGN

# statusline
set -g status-bg blue # transparent
set -g status-fg white
set -g status-attr default

# default window title colors
setw -g window-status-fg colour15
setw -g window-status-bg default
setw -g window-status-attr dim

# active window title colors
setw -g window-status-current-fg white
setw -g window-status-current-bg red
setw -g window-status-current-attr bright

# bell alerted window color
setw -g window-status-bell-bg red
setw -g window-status-bell-fg white
setw -g window-status-bell-attr bright

# content alerted color
#setw -g window-status-content-bg blue
#setw -g window-status-content-fg white
#setw -g window-status-content-attr bright
setw -g window-status-activity-bg blue
setw -g window-status-activity-fg white
setw -g window-status-activity-attr bright

set -g window-style 'fg=colour8,bg=colour7'
set -g window-active-style 'fg=colour8,bg=colour231'

# pane borders
set -g pane-border-fg white
set -g pane-border-bg default
set -g pane-active-border-fg brightblack
set -g pane-active-border-bg default

# command line
set -g message-fg default
set -g message-bg default
set -g message-attr bright
